import Head from "next/head";
import { UIEvent, useEffect, useState } from "react";
import { Recipe } from "@/types/recipes";
import RecipeList from "@/components/RecipeList";
import Header from "@/components/Header";
import { getRecipesByHref, getRecipesBySearchWord } from "@/util/api-client";
import styles from "@/styles/HomePage.module.css";

export default function HomePage() {
  const [recipes, setRecipes] = useState<Recipe[]>([]);
  const [nextRecipes, setNextRecipes] = useState<string>("");
  const handleLoadRecipes = async (searchText: string) => {
    const recipesList = await getRecipesBySearchWord(searchText);
    console.log(recipesList);
    const recipes = recipesList.hits.map((r) => r.recipe);
    if (recipes) {
      sessionStorage.setItem("search-text", searchText);
      sessionStorage.setItem("recipes", JSON.stringify(recipes));
      setRecipes(recipes);
      console.log(recipes);
    }
  };

  useEffect(() => {
    const recipes = JSON.parse(sessionStorage.getItem("recipes")!) as Recipe[];
    if (recipes) {
      setRecipes(recipes);
    }
  }, []);

  const handleScroll = (event: UIEvent<HTMLDivElement>) => {
    if (event.currentTarget.clientTop > 10) {
      loadMoreRecipes(nextRecipes);
    }
  };
  const loadMoreRecipes = async (href: string) => {
    const newRecipeList = await getRecipesByHref(href);
    const newRecipes = newRecipeList.hits.map((hit) => hit.recipe);
    setRecipes((prevState) => [...prevState, ...newRecipes]);
  };

  return (
    <>
      <Head>
        <title>Recipes</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <body onScroll={handleScroll}>
        <div className={styles.homeDiv}>
          <Header handleLoadRecipes={handleLoadRecipes} />
          <RecipeList recipes={recipes} />
          <img className={styles.edamamBadge} src="/edamam-badge.svg" />
        </div>
      </body>
    </>
  );
}
