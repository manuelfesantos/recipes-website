import { getSingleRecipeById } from "@/utils/edamam-api/api-client";
import { RecipeDetails } from "@/types/recipes";
import { GetServerSideProps, GetServerSidePropsContext } from "next";
import { encode } from "querystring";
import Link from "next/link";
import IngredientList from "@/components/IngredientList";
import styles from "@/styles/RecipePage.module.css";
import RecipeProfile from "@/components/RecipeProfile";
import Head from "next/head";
import Image from "next/image";
import { useRouter } from "next/router";
import Header from "@/components/Header";
import { User } from "@/types/user";

export default function RecipePage({
  recipe,
  user,
}: {
  recipe: RecipeDetails;
  user: User | null;
}) {
  const images = recipe.images;

  const image = images.LARGE?.url ?? recipe.image;
  const imageLoader = () => image;
  const router = useRouter();

  return (
    <>
      <Head>
        <title>{recipe.label} Recipe</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Header />
      <div className={styles.recipeDiv}>
        <RecipeProfile title={recipe.label} image={recipe.image} />
        <div className={styles.recipeData}>
          <Image
            className={styles.img}
            loader={imageLoader}
            placeholder={"blur"}
            width={300}
            height={300}
            blurDataURL={"/Rolling-1s-460px.gif"}
            alt={recipe.label}
            src={image}
          />
          <IngredientList ingredients={recipe.ingredients} />
        </div>
        <div className={styles.links}>
          <Link
            className={styles.link}
            href={"https://www.justtherecipe.com/?url=" + recipe.url}
            target="_blank"
          >
            Get Preparation Steps
          </Link>
          <Link
            className={styles.link}
            href={`/?id=${router.query.id}`}
            scroll={true}
          >
            Back to Recipes
          </Link>
          {user && <button className={styles.link}>Add to Favorites</button>}
        </div>
      </div>
    </>
  );
}

export const getServerSideProps: GetServerSideProps = async ({
  query,
  req,
}: GetServerSidePropsContext) => {
  const params = encode(query);
  const wrappedRecipe = getSingleRecipeById(params.slice(3));
  const recipe = (await wrappedRecipe).recipe as RecipeDetails;

  const user = req.cookies.user;
  const parsedUser = JSON.parse(user ?? "{}");
  const userResponse = Object.keys(parsedUser).length ? parsedUser : null;
  return {
    props: { recipe, user: userResponse },
  };
};
