import Head from "next/head";
import Header from "@/components/Header";
import { useEffect, useRef } from "react";
import { User, UserCredentials } from "@/types/user";
import { toast, Toaster } from "react-hot-toast";
import { useRouter } from "next/router";
import { GetServerSideProps } from "next";
import { setCookie } from "cookies-next";

export default function Signup({ isLoggedIn }: { isLoggedIn: boolean }) {
  //TODO Implement Cookies
  const username = useRef<HTMLInputElement>(null);
  const password = useRef<HTMLInputElement>(null);
  const router = useRouter();

  const handleSignup = async () => {
    if (!username.current || !password.current) {
      toast.error("Please fill all fields before submiting");
      return;
    }
    const user: User = {
      username: username.current.value,
      password: password.current.value,
      recipes: [],
    };
    const headers = new Headers();
    headers.append("action", "signup");
    const responsePromise = await fetch("/api/users", {
      method: "POST",
      body: JSON.stringify(user),
      headers: headers,
    });
    const response = await responsePromise.json();
    if (response.status === 201) {
      toast.success("User created Successfully");
      setCookie("user", JSON.stringify(response.user._id));
      setTimeout(async () => await router.push("/profile"), 2000);
    } else if (response.status === 400) {
      toast.error("Username already exists");
    }
  };

  const handleLogin = async () => {
    if (!username.current || !password.current) {
      toast.error("Please fill all fields before submiting");
      return;
    }

    const userCredentials: UserCredentials = {
      username: username.current.value,
      password: password.current.value,
    };

    const headers = new Headers();
    headers.append("action", "login");
    const responsePromise = await fetch(`/api/users`, {
      method: "POST",
      body: JSON.stringify(userCredentials),
      headers: headers,
    });
    const response = await responsePromise.json();
    if (response.status === 200) {
      setCookie("user", response.user._id);
      await router.push("/profile");
    } else if (response.status === 404 || response.status === 403) {
      toast.error("Invalid Username or Password");
    }
  };

  return (
    <>
      <Head>
        <title>Profile Page</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Header />
      <div>
        <Toaster />
      </div>
      <div>
        <form>
          <label htmlFor={"username"}>Username</label>
          <input type={"text"} id={"username"} ref={username} />
          <label htmlFor={"password"}>Password</label>
          <input type={"password"} id={"password"} ref={password} />
          <button type={"button"} onClick={handleSignup}>
            Signup
          </button>
          <button type={"button"} onClick={handleLogin}>
            Login
          </button>
        </form>
      </div>
    </>
  );
}

export const getServerSideProps: GetServerSideProps = async ({ req, res }) => {
  const user = req.cookies.user;
  if (!user) {
    return { props: { isLoggedIn: false } };
  } else {
    return {
      redirect: {
        destination: "/profile",
        permanent: false,
      },
    };
  }
};
